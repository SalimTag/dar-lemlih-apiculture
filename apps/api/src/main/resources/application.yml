spring:
  application:
    name: dar-lemlih-apiculture-api
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  datasource:
    url: ${DB_URL:jdbc:mysql://localhost:3306/darlemlih?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC}
    username: ${DB_USER:dar}
    password: ${DB_PASSWORD:lemlih}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      auto-commit: true
  
  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
    show-sql: false
    open-in-view: false
  
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
  
  mail:
    host: ${SMTP_HOST:localhost}
    port: ${SMTP_PORT:1025}
    username: ${SMTP_USER:}
    password: ${SMTP_PASS:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    test-connection: false
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  
  jackson:
    serialization:
      write-dates-as-timestamps: false
    default-property-inclusion: non_null

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: always
    include-binding-errors: always

# JWT Configuration
jwt:
  secret: ${JWT_SECRET:change_me_super_secret_key_for_production_use_min_256_bits}
  access-token-expiration: ${JWT_ACCESS_TTL_MIN:15}
  refresh-token-expiration: ${JWT_REFRESH_TTL_DAYS:7}

# Payment Configuration
payment:
  provider: ${PAYMENT_PROVIDER:mock}
  stripe:
    secret-key: ${STRIPE_SECRET_KEY:sk_test_your_stripe_secret_key_here}
    webhook-secret: ${STRIPE_WEBHOOK_SECRET:whsec_your_webhook_secret_here}
    success-url: ${PAYMENT_SUCCESS_URL:${app.web-base-url}/payment/success}
    cancel-url: ${PAYMENT_CANCEL_URL:${app.web-base-url}/payment/cancel}
  mock:
    enabled: true

# Application Configuration
app:
  base-url: ${APP_BASE_URL:http://localhost:8080}
  web-base-url: ${WEB_BASE_URL:http://localhost:5173}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:5173,http://localhost:3000,http://localhost}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true
    max-age: 3600
  
  uploads:
    path: ${UPLOAD_PATH:./uploads}
    public-base-url: ${UPLOAD_PUBLIC_BASE_URL:/uploads}
    max-size: ${UPLOAD_MAX_SIZE:10485760} # 10MB
    max-files: ${UPLOAD_MAX_FILES:6}
    allowed-extensions: ${UPLOAD_ALLOWED_EXTENSIONS:jpg,jpeg,png,gif,webp}
    allowed-content-types: ${UPLOAD_ALLOWED_CONTENT_TYPES:image/jpeg,image/png,image/webp,image/gif}
  
  mail:
    from: ${APP_EMAIL_FROM:${MAIL_FROM:noreply@darlemlih.ma}}
    from-name: ${MAIL_FROM_NAME:Dar Lemlih Apiculture}
    admin: ${APP_EMAIL_ADMIN:admin@darlemlih.ma}

# AWS/LocalStack configuration
aws:
  endpoint: ${AWS_ENDPOINT_URL:http://localhost:4566}
  public-endpoint: ${AWS_PUBLIC_ENDPOINT:${aws.endpoint}}
  region: ${AWS_REGION:us-east-1}
  access-key: ${AWS_ACCESS_KEY_ID:test}
  secret-key: ${AWS_SECRET_ACCESS_KEY:test}
  s3:
    enabled: ${STORAGE_S3_ENABLED:true}
    bucket: ${S3_BUCKET:media}

# OpenAPI Documentation
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    try-it-out-enabled: true
    filter: true
    tags-sorter: alpha
    operations-sorter: alpha
  show-actuator: false

# Logging
logging:
  level:
    root: INFO
    com.darlemlih.apiculture: DEBUG
    org.springframework.web: INFO
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/application.log

# Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
