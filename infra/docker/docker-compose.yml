version: "3.9"

services:
  # MySQL Database
  db:
    image: mysql:8.0
    container_name: darlemlih-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: darlemlih
      MYSQL_USER: dar
      MYSQL_PASSWORD: lemlih
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - darlemlih-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  # Spring Boot API
  api:
    build:
      context: ../../apps/api
      dockerfile: ../../infra/docker/Dockerfile.api
    container_name: darlemlih-api
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_URL: jdbc:mysql://db:3306/darlemlih?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      DB_USER: dar
      DB_PASSWORD: lemlih
      JWT_SECRET: change_me_super_secret_key_for_production_use_min_256_bits
      JWT_ACCESS_TTL_MIN: 15
      JWT_REFRESH_TTL_DAYS: 7
      PAYMENT_PROVIDER: ${PAYMENT_PROVIDER:-mock}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY:-sk_test_your_stripe_secret_key_here}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET:-whsec_your_webhook_secret_here}
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      APP_BASE_URL: http://localhost:8080
      WEB_BASE_URL: http://localhost
      CORS_ALLOWED_ORIGINS: http://localhost,http://localhost:5173,http://localhost:3000
      # LocalStack / AWS
      AWS_ENDPOINT_URL: http://localstack:4566
      AWS_PUBLIC_ENDPOINT: http://localhost:4566
      AWS_REGION: us-east-1
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      STORAGE_S3_ENABLED: "true"
      S3_BUCKET: media
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      - localstack
    networks:
      - darlemlih-network
    volumes:
      - ./uploads:/app/uploads

  # React Frontend
  web:
    build:
      context: ../../apps/web
      dockerfile: ../../infra/docker/Dockerfile.web
    container_name: darlemlih-web
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:8080
      VITE_APP_DEFAULT_LANG: fr
      VITE_APP_SUPPORTED_LANGS: fr,en,ar
      VITE_PAYMENT_PROVIDER: ${PAYMENT_PROVIDER:-mock}
      VITE_STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY:-pk_test_your_stripe_publishable_key_here}
    ports:
      # Map host port 80 to container's nginx port 80
      - "80:80"
    depends_on:
      - api
    networks:
      - darlemlih-network

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: darlemlih-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - darlemlih-network

  # phpMyAdmin for Database Management
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: darlemlih-phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_USER: dar
      PMA_PASSWORD: lemlih
      UPLOAD_LIMIT: 50M
    ports:
      - "8090:80"
    depends_on:
      - db
    networks:
      - darlemlih-network

  # LocalStack for AWS emulation
  localstack:
    image: localstack/localstack:latest
    container_name: darlemlih-localstack
    restart: unless-stopped
    environment:
      - SERVICES=s3,sqs,dynamodb,lambda
      - DEBUG=1
      - AWS_REGION=us-east-1
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/var/lib/localstack
    networks:
      - darlemlih-network

  # Note: For development with hot-reload, use docker-compose.dev.yml instead

networks:
  darlemlih-network:
    driver: bridge

volumes:
  db_data:
    driver: local
  web_node_modules:
    driver: local
  localstack_data:
    driver: local
