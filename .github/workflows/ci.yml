name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    name: Backend (Spring Boot)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      - name: Cache Maven repo
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-
      - name: Grant execute permission for mvnw
        run: chmod +x apps/api/mvnw
      - name: Run tests
        working-directory: apps/api
        run: ./mvnw clean verify -B

  frontend:
    name: Frontend (Vite React)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: Install deps
        working-directory: apps/web
        run: npm ci || npm install
      - name: Lint
        working-directory: apps/web
        run: npm run lint
      - name: Build
        working-directory: apps/web
        run: npm run build

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build API Image
        run: docker build -t darlemlih/api:latest -f infra/docker/Dockerfile.api apps/api
      - name: Build Web Image
        run: docker build -t darlemlih/web:latest -f infra/docker/Dockerfile.web apps/web
  # Optional push steps (uncomment and configure secrets DOCKERHUB_USER / DOCKERHUB_TOKEN)
  # - name: Login to Docker Hub
  #   run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USER" --password-stdin
  # - name: Push Images
  #   run: |
  #     docker tag darlemlih/api:latest $DOCKERHUB_USER/darlemlih-api:latest
  #     docker tag darlemlih/web:latest $DOCKERHUB_USER/darlemlih-web:latest
  #     docker push $DOCKERHUB_USER/darlemlih-api:latest
  #     docker push $DOCKERHUB_USER/darlemlih-web:latest

  e2e:
    name: E2E (Playwright)
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install Playwright
        working-directory: apps/web
        run: |
          npm ci
          npx playwright install --with-deps
      - name: Start stack
        run: |
          docker compose -f infra/docker/docker-compose.yml up -d
          for i in {1..60}; do curl -fsS http://localhost:8080/actuator/health && break || sleep 2; done
      - name: Run E2E
        working-directory: apps/web
        run: npx playwright test --reporter=line || true
      - name: Upload Playwright traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report
